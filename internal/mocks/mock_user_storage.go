// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/storages/user/user_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	storages "github.com/manabie-com/togo/internal/storages"
)

// MockUserStorageInterface is a mock of UserStorageInterface interface.
type MockUserStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserStorageInterfaceMockRecorder
}

// MockUserStorageInterfaceMockRecorder is the mock recorder for MockUserStorageInterface.
type MockUserStorageInterfaceMockRecorder struct {
	mock *MockUserStorageInterface
}

// NewMockUserStorageInterface creates a new mock instance.
func NewMockUserStorageInterface(ctrl *gomock.Controller) *MockUserStorageInterface {
	mock := &MockUserStorageInterface{ctrl: ctrl}
	mock.recorder = &MockUserStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserStorageInterface) EXPECT() *MockUserStorageInterfaceMockRecorder {
	return m.recorder
}

// GetUser mocks base method.
func (m *MockUserStorageInterface) GetUser(id, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", id, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetUser indicates an expected call of GetUser.
func (mr *MockUserStorageInterfaceMockRecorder) GetUser(id, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockUserStorageInterface)(nil).GetUser), id, password)
}

// GetUsersTasks mocks base method.
func (m *MockUserStorageInterface) GetUsersTasks(userID, craetedDate string) (storages.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsersTasks", userID, craetedDate)
	ret0, _ := ret[0].(storages.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsersTasks indicates an expected call of GetUsersTasks.
func (mr *MockUserStorageInterfaceMockRecorder) GetUsersTasks(userID, craetedDate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsersTasks", reflect.TypeOf((*MockUserStorageInterface)(nil).GetUsersTasks), userID, craetedDate)
}
